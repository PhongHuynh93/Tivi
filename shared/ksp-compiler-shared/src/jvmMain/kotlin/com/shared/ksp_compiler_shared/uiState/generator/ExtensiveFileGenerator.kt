package com.shared.ksp_compiler_shared.uiState.generator

import com.google.devtools.ksp.symbol.KSClassDeclaration
import com.shared.ksp_compiler_shared.uiState.model.ExtensiveModelBag
import com.shared.ksp_compiler_shared.uiState.model.modelName
import com.squareup.kotlinpoet.ClassName
import com.squareup.kotlinpoet.FileSpec

/**
 *
 * The primary file generator for the sealed classes and interfaces respectively that are annotated
 * with the [ExtensiveSealed] annotation.
 *
 * @property declaration The annotated declaration with the [ExtensiveSealed] annotation.
 * @property extensiveModelBag The compile-time information from the [ExtensiveModel] annotation.
 */
internal class ExtensiveFileGenerator(
    private val declaration: KSClassDeclaration,
    private val extensiveModelBag: ExtensiveModelBag
) {

    fun generate(): FileSpec {
        val packageName = declaration.packageName.asString()
        val name = extensiveModelBag.modelName
        val fileName = "$name${declaration.simpleName.asString()}"
        val className = ClassName.bestGuess("$packageName.$fileName")

        val extensiveSealedClassSpec = ExtensiveSealedClassGenerator(
            declaration = declaration,
            className = className,
            extensiveModelBag = extensiveModelBag
        ).generate()

        return FileSpec.builder(
            packageName = packageName,
            fileName = fileName
        )
            .addFileComment("This class was generated by sealedx (https://github.com/skydoves/sealedx).\n")
            .addFileComment("Do not modify this class.")
            .addType(extensiveSealedClassSpec)
            .build()
    }
}
